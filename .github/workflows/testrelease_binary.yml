name: testrelease_binary

on:
  push:
    #branches: [ action_test ]
    tags: ["test_*"]

jobs:
  make_sdist:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
      - name: build_sdist
        run: |
          echo This job does not specify a container.
          echo It runs directly on the virtual machine.
          #
          echo "!!!!!"
          REF=$(echo ${GITHUB_REF#refs/heads/})
          echo $REF
          echo "!!!!!"
          git clone https://github.com/mfem/PyMFEM.git
          cd PyMFEM
          git checkout $REF
          #
          mkdir external
          cd external
          git clone https://github.com/mfem/mfem.git
          cd ..
          #
          export PATH=/opt/python/cp37-cp37m/bin:$PATH
          echo $(python -c "import setuptools;print(setuptools.__version__)")
          pip3 install setuptools==65.5.1
          pip3 install wheel six auditwheel twine
          pip3 install numpy==1.21.6
          #if [ -f requirements.txt ]; then
          #   pip3 install -r requirements.txt
          #fi
          rm -rf dist/*
          python3 setup.py sdist
          ls -l dist/
          python3 -m twine upload --repository-url https://test.pypi.org/legacy/ --password ${{ secrets.TEST_PYPI_TOKEN }} --username __token__ --verbose dist/*
          #python3 -m twine upload --password ${{ secrets.PYPI_TOKEN }} --username __token__ --verbose dist/*
  make_binary_3_7_8_9:
    needs: make_sdist
    strategy:
      matrix:
        pythonpath: ["cp37-cp37m", "cp38-cp38", "cp39-cp39"]

    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    #container: node:10.16-jessie
    steps:
      - name: build package
        run: |
          echo It runs in the container instead of the VM.
          REF=$(echo ${GITHUB_REF#refs/heads/})
          echo "!!!!!!: "$REF
          #
          git clone https://github.com/mfem/PyMFEM.git
          cd PyMFEM
          #
          mkdir external
          cd external
          git clone https://github.com/mfem/mfem.git
          cd ..
          #
          git checkout $REF
          #
          ls -l /opt/python/
          export PATH=/opt/python/${{ matrix.pythonpath }}/bin:$PATH
          echo $(python -c "import setuptools;print(setuptools.__version__)")
          pip3 install setuptools==65.5.1
          pip3 install six auditwheel twine

          pip3 install numpy==1.21.6
          pip3 install numba-scipy
          #if [ -f requirements.txt ]; then
          #   pip3 install -r requirements.txt
          #fi
          CWD=$PWD
          ls -l
          yum install -y zlib-devel

          python3 setup.py install
          # python3 -m pip install ./ --verbose	  (this seems okay too)
          rm -rf dist/*
          python3 setup.py bdist_wheel

          export LD_LIBRARY_PATH=${CWD}/PyMFEM/external/mfem/cmbuild_ser/:$LD_LIBRARY_PATH
          rm -rf wheelhouse/*
          auditwheel repair dist/*.whl
          rm -rf dist/*

          mv wheelhouse/* dist/
          ls -l dist/
          python3 -m twine upload --repository-url https://test.pypi.org/legacy/ --password ${{ secrets.TEST_PYPI_TOKEN }} --username __token__ --verbose dist/*
          #python3 -m twine upload --password ${{ secrets.PYPI_TOKEN }} --username __token__ --verbose dist/*

  make_binary_3_10:
    needs: make_sdist
    strategy:
      matrix:
        pythonpath: ["cp310-cp310"]

    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux_2_24_x86_64
    #container: node:10.16-jessie
    steps:
      - name: build package
        run: |
          echo It runs in the container instead of the VM.
          REF=$(echo ${GITHUB_REF#refs/heads/})
          echo "!!!!!!: "$REF
          #
          git clone https://github.com/mfem/PyMFEM.git
          cd PyMFEM
          #
          git checkout $REF
          #
          ls -l /opt/python/
          export PATH=/opt/python/${{ matrix.pythonpath }}/bin:$PATH
          #pip3 install setuptools==65.5.1
          pip3 install six auditwheel twine
          pip3 install numba-scipy
          if [ -f requirements.txt ]; then
             pip3 install -r requirements.txt
          fi
          CWD=$PWD
          ls -l

          apt-get update
          apt-get install -y zlib1g-dbg

          python3 -m pip install ./ --verbose

          rm -rf dist/*
          python3 setup.py bdist_wheel

          export LD_LIBRARY_PATH=${CWD}/PyMFEM/external/mfem/cmbuild_ser/:$LD_LIBRARY_PATH

          rm -rf wheelhouse/*
          auditwheel repair dist/*.whl
          rm -rf dist/*

          mv wheelhouse/* dist/
          ls -l dist/
          python3 -m twine upload --repository-url https://test.pypi.org/legacy/ --password ${{ secrets.TEST_PYPI_TOKEN }} --username __token__ --verbose dist/*
          #python3 -m twine upload --password ${{ secrets.PYPI_TOKEN }} --username __token__ --verbose dist/*
